
What happens when you initialize a repository? Why do you need to do it?

It greats a .git folder locally which contains meta-data about the files in that directory. This begins the version control tracking system which will then allow the user to make commits and save progress.

How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area allows you to control which files to include in the commit. Files that are not in the staging area before a commit is made is not saved as part of the commit. This allows users to control what changes to be part of one commit.

How can you use the staging area to make sure you have one commit per logical change?

User can add/remove modified files from staging area to control what files are saved in each commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches are useful if there are multiple features/versions being worked on in parallel and need to be tracked.

How do the diagrams help you visualize the branch structure?

Digrams help us keep track of which branches are where and understand the reachability.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

It merges all changes in each branch into one commit. The merged commit will included changes from all its parents so the diagram will have two arrows pointing from the merged commit to all its parents.